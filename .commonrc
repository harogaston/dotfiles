#
# ~/.commonrc
#

# Aliases
alias sudo='sudo '                        # Allows aliases recursive expansion after sudo
alias cp="cp -i"                          # confirm before overwriting something
alias df='df -h'                          # human-readable sizes
alias free='free -m'                      # show sizes in MB
alias np='nano -w PKGBUILD'
alias more=less
alias vi=vim
alias ls='ls --color'
alias dots='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'

export PATH=/home/gaston/bin:$PATH
export COMPOSE_HTTP_TIMEOUT=180
export EDITOR=/usr/bin/vim
export NNN_TMPFILE="/tmp/nnn"
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"

ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

n()
{
        nnn "$@"

        if [ -f $NNN_TMPFILE ]; then
                . $NNN_TMPFILE
                rm $NNN_TMPFILE
        fi
}

docker_containers_stop_all()
{
    prefix=$1
	if [ -n "$prefix" ]; then
        if [ -n "$(docker ps -q -f name=$prefix)" ]; then
            docker stop $(docker ps -q -f name=$prefix)
            return 0;
        fi
	elif [ -n "$(docker ps -q -f status=running)" ]; then
        docker stop $(docker ps -q -f status=running)
        return 0;
	fi
	echo "Nothing to do"
	return 0;
}

docker_containers_rm_all()
{
    prefix=$1
	if [ -n "$prefix" ]; then
        if [ -n "$(docker container ls -q -a -f name=$prefix)" ]; then
            docker container rm $(docker container ls -q -a -f name=$prefix)
            return 0;
        fi
    elif [ -n "$(docker container ls -q -a -f status=exited)" ]; then
        docker container rm $(docker container ls -q -a -f status=exited)
        return 0;
	fi
	echo "Nothing to do"
	return 0;
}

docker_images_pull_all()
{
	docker images | grep -v REPOSITORY | grep -v esys | awk '{print $1}' | xargs -L1 docker pull
}

docker_images_rm_all()
{
	docker images | grep -v REPOSITORY | grep -v esys | awk '{print $3}' | xargs -L1 docker image rm
}

dbash()
{
	docker exec -ti $@ /bin/sh
}
